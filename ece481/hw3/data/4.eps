%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 113 167 570 382
%%HiResBoundingBox: 113.000000 167.500000 569.500000 381.500000
%%Title: data/4.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Mar  8 05:49:44 2010
%%EndComments
% EPSF created by ps2eps 1.64
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (data/4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar  8 05:49:44 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
6538 6375 N
0 -3859 V
3859 0 V
0 3859 V
-3859 0 V
Z stroke
8467 6585 M
[ [(Helvetica) 120.0 0.0 true true 0 (Equalized)]
] -40.0 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 6538 2516 N 6538 6375 L 10397 6375 L 10397 2516 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  6502 6411 M
  3931 0 V
  0 -3931 V
  -3931 0 V
  6502 6411 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 3808 string def
  currentfile imagebuf readstring
} {
gsave
6502 6411 translate
3931 -3931 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 55
  /Height 55
  /BitsPerComponent 8
  /ImageMatrix [ 55 0 0 55 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
.m#UG1c.$G1c$mC0f1aD0etL:3]/QF1,1U>0/"t40J>%2/hSe1/hJV+/M/M)/1W5$.Olo-2)R3I1Gg
sH2)R3H1G^jE1c.'?0K:d>0J4t20ek=6/hSb./1W8(0/5.70J>%0/1`>&.Om>23]/`M1c7-J2)@*H2
)R-B1,LaC0eYUO3]fJg5!;"j4[)"f0eY4;2`*?I0eY+0/1`;$.Q91A2)R6K2E!HN2)@$D1c7*C2ENu
`5!M7r5<h@s5<h@s5<h@s2)[<E2E3QK0.eY,/1`;%2`3HO2`<NP2`<NK2Dm6F2**ia5<h=q5!D.m4$
>bk5!;(m/1NeH0I/&"2DHd<0In\,/M&D32`<WS2`EZR2E*QS2)RN]5<h@s5!1nh3'/uZ4[)%n5!CkP
*$$mt+Wi*h2(gO7/1rJ)/M9"B2`N`T3&ifS3&NZS4?l%p5<_.f1GgpD3]fMh4$,Vi4#o&<%iQc=*$m
9t1c-p@/h\k1/iYjN3&W]U3&WWP3^,bm5<h@r4ZkV[0e+n?4ZteX/iPjR/LDVU$ka[%,qh57/hSn4/
M/S-3&ioX2E*]Z2DR'P5<h@r5!M7r4utbd/2B=M2_d$@/M/\.,9%7$#T"C#-nmG72`WNE/hSb92`Wo
Y3'02[0J5:C4$5Vh5<h=m0f_<K/N,RB0fUg2*Zc[V+;5(a$ks[/,pF`o4?>>U0ebRG3BK5^4ZkVU/0
lPr4?Ykm4YnT>0Jk7,0/5(62(0FX&J?$/+qat[$kt*:*#fqE.4Hf(3]T2]3]T8_2_QR++sed&4?b_U
-m^,f.4-Jq.PEM'+;,.i!!jJi-Pc[d#TtE3&ebru+snit3]K/\4?G8H,pFHP+Yu2C1b'b!-6slb-R^
Gn0dn"X$j-S3!sfM\,7abS'I"G(&f;;s)^-^l3'0/b4ZFi3)]BV=2)@*C-mU)c,9A$U-RgT#,8(Lq!
s8N'!!<KF(^L*I+!M.$&.f6_(EY[u4$5P`0-qML(_7fE1b:1"*[;dH'H/5F.4Qkn'+>9R!s8N'!!!?
<$j-JA,T$do%1!CT(HOT<2_?R/,o[=0$m@>e0-h2M,TII-'I,%T/2A^s%h8jFz!!<W<!!!9E)@-TU"
pbVL4$,GU.4Q_o+VPOu+#,Z&((:ru()7Q&,VUi%2)-Et(^pKH!!!!$#RUb9!!X8["pP>;!sf;s4?"c
<-7:/d*"iT'3AD`k#RV(T)BBnH1,1^L2_cd0*uG1d#R1J;#R1A2!tl[_!sSi0"pd:Q2'sOm-n$A`%L
=LE.2W[%!!<Q?)^6ao4?Yhj4?,&Q/KG0#"ptVA"p4i-$5s0P!!<<*#!P+",9.dQ-70fC$o'Xb%g)n9
!!<K;-9==R4Zkha2**WW/053%$46k>"on`2(^pBH!s8W-3@lHt)]^1M-Qrm,/he1J!!!!$#RqS!2a'
8[4"DR)/1rY0,o[0n"pbD;!rrE;$ig8-!s8f]-QsBI*?udV,nC2*-5-^j#R1_L(EY:k4"_s8,p=Qa2
)R*<,SC:`#RCV:!!!Q@!rr<$!t6P%+;u7C,U"E\'E]6s)B0A)'HA/:,VM)9/3GO3,U+HY+!rcs*=W8
["pP/3!"BGC!rr<*(*Xb=(EFVB*[E0N!"'P_,9@sN,:4Z_/M9(I.N]WL'+k`^$61H='bM&e"p4r0$k
<OF!s8`M*uYk.)]p4E-7g&;!u2t+-7L>h.4-Dp1HRN2&J#3N!s8N'!uNF+&f2/h!rr<,%L<7@!tQ_!
(`!i%*$64J/05'!&gA\P.OZ\t-n$`01Em59$3L8.!!<<'$7$c/'c.De!rrN8$4$V9+Y=TG)A*Go*??
@U,n'kc*[iQg.5!;&.PEP+*!urO!!<<'!!!**)B]q5((gfS!s8r;"p5\n2&[;K%LNde)C$a`'EAIY-
7LQ"3%lg71bU0j"p4r-!rr<$!!<39*Z>k1&I\jG!"',:&LfFj)Aa.u#S.gm,V1Pf!sTA\.60FM0e+Y
32^fFM!rr<'z!!<cN(`4#)'FFpE#Rh%`0fLs/'G:i\%N?E6.kW"M!t?;(4?GP[.Om>:.2i^&!rrE'!
s8N*!t#PN()7T%%0d"=#So*O2`)Hb$k*=M*$?OY0d[;/$6_;h2Dm<B/2K%1*>&V_!s8N*!rrE*"q2%
[&ec/o$4$_>*Ao`51*$l4#R1h],:+fo.M;gf+?M_I4?"`@0J4as'++gD!rrE'!s8W2%hfce$5O6`$3
gbP2Dd'C*tehd$l'g.-7LJu)?U'_4[(ng/L;es0e=Ud$jHe9!!<<'!s8f>',:cY(Dm_m"q2Cq/i#7-
((:HY(`X\I/h&7l#R2>54Z5AV-nHi!.O5rD"p4r0!s8N*!t5\S&dSpb(_I/^%j3&@,r$eh&df3i)BU
@\-Rg>M"!B``0f:gE3%HR7.3]H1!s8`3"pbD=%hoij!tQ@i&./[K%29p5.5rUq',),q)^d*_,pj6/)
`&lc0fV*K3'&Z<+;bFf#Qk&,"q2Cb)A`J[&fM>k#RUtP,:Fle4Z"T2*#9/+-S6\j,o-\!-Qj!E3Aii
Y1bL.!*"iMZz"r%jf%0HkJ(CgcX$k*aa*?Z[l3]/W?*Z,h@.4$,`)@@'#*=<<.4$5DX1+jgj&IJL<z
#Rq%>!t5eX%1!4J$kX6q,:kr=3]oGQ,U+K^,Te6J%2'g,%h':(3BT2R/0,<0!rr<$!!!!$"p4i-%20
Hc$4%%K&fMi</Nc'S4?Y_W,pO]Z+X%U3(a("C&d&Xe2)?d(%h&XBz!!!**!rr<3'G(Z[#Rh:]*@33k
4Zkef4?4f3*?cUO*Y]/%*?lgL$k*IU)C,q&$3L8.z!!<<*!!<cK%LNII%MTa'.lB7M5<h7l2C9C_+!
M^?',(uo*?uX:%1`XC%3cT"$46t>!!WN-!s8f5#SS$b$4$nH&JcQG3&s/d5!D%f-QX3D(DI>p)\Wo(
)^$.>&-`+:(+LRM)[uuR"ptV<"pbDA'G:i^#RUtN'd5:i3^,_j4#SN-()%;k&J,Tt)AX>6+<VdJ$jZ
q>-RL,Z'FY0Q&.AaK"pPMM&demK$4[R]*@j!,5!D+k1aj@`(DRPp'G;?))]^%B,9\EL"p4iG.O6)Q%
gi^]%h&dN#S.LX$47%E$k=!h,;:r=5!:q]-QjEK)Aa)(',DN-*[2[N+s\<H$3M%i+<2:9$4Rgb%h&^
N%hB0V"pbPF%1s3m.5!hK4#SiB+rqXC)]BP/'c%`/+<M^L+XA0B!tuq"()Rbp$l0Qn&.AsW%hJpI#R
h+M%1a7(0g@i^2Dlp.*ZcCD*#]_3'G_W/)B'YB+sA-B$m-`5&.]9Y%i6,t&.oEa%gE4D$47+K%21*H
5!:h`2(0[l+X.sJ*#oe1',V]+)B^=O+Wqj?(F'b*%1WXP(`3bq'G1le$4$hA$47+L&g]7r4>o)Q-R9
iY+s.gG*#]V,()R`&,:"T^)B9n@()IJi%0I"X(_@>p&J5W_"pP>?$4IFZ-SmqK2`*38,p49Q*uu=@)
AWu&'+u3.-6jiZ()S2;,8q'u#R2%\'c7Vt'GLlV"pbJ?%h'$u2*F&_3%ud-+s.mL)]BY6'c%Jo%iQ]
>+t+`Y%2'j2,Tmd5',hr5(Cq#p'*\OC#R1\N$kk-J5!(_]0.A4m+WhdF)B0V6(_[>f(aC7K.462K#S
.n&.3p&V'+kfe&JZ2s"p5&8#S.OR'J)"$2)-m@/gqqf+<2::)B0S1&I]*`+<V^Q-6Ep1$kO*g)A3;X
"qMC`)Aith!sT#>'+Y?f0/,ON3&EEG.3p&Y)]0A.)Aa"s%1Nje*$$CS+r1Rr().5h$j[%C&Ju<$((:
BO#RV"V%L=%,.f~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
6538 5732 M
88 0 V
3771 0 R
-88 0 V
stroke
6454 5732 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
6538 5017 M
88 0 V
3771 0 R
-88 0 V
stroke
6454 5017 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
6538 4303 M
88 0 V
3771 0 R
-88 0 V
stroke
6454 4303 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
6538 3588 M
88 0 V
3771 0 R
-88 0 V
stroke
6454 3588 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MRshow
0.500 UL
LTb
6538 2873 M
88 0 V
3771 0 R
-88 0 V
stroke
6454 2873 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MRshow
0.500 UL
LTb
7181 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
7181 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
7896 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
7896 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
8610 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
8610 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
9325 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
9325 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
10040 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
10040 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
6538 6375 N
0 -3859 V
3859 0 V
0 3859 V
-3859 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/GreenA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/BlueA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 6375 N
0 -3859 V
3858 0 V
0 3859 V
-3858 0 V
Z stroke
3404 6585 M
[ [(Helvetica) 120.0 0.0 true true 0 (Original)]
] -40.0 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 1475 2516 N 1475 6375 L 5333 6375 L 5333 2516 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  1439 6411 M
  3930 0 V
  0 -3931 V
  -3930 0 V
  1439 6411 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 3617 string def
  currentfile imagebuf readstring
} {
gsave
1439 6411 translate
3930 -3931 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 63
  <
   000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c
   202020 242424 282828 2d2d2d 313131 353535 393939 3d3d3d
   414141 454545 494949 4d4d4d 515151 555555 595959 5d5d5d
   616161 656565 696969 6d6d6d 717171 757575 797979 7d7d7d
   828282 868686 8a8a8a 8e8e8e 929292 969696 9a9a9a 9e9e9e
   a2a2a2 a6a6a6 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe
   c2c2c2 c6c6c6 cacaca cecece d2d2d2 d7d7d7 dbdbdb dfdfdf
   e3e3e3 e7e7e7 ebebeb efefef f3f3f3 f7f7f7 fbfbfb ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 55
  /Height 55
  /BitsPerComponent 8
  /ImageMatrix [ 55 0 0 55 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
)_**X,9nEX,9e9T+X86V+X&!M-mTiW+Wr!P+!2RI+<DRE*ZcCE*??+?*??+>*#fh9)]K\B,:"KY+sS
<X,U4NX+sJ6V,9nHQ+=83O+<DOF+<V^G*?H7B*#fk<+!;[K+<DOC*#oq;)]L(H-mKr\,9nHZ,9e?W,
:"ES+X8-T+<N$a-n6l+1+b"-0/>+*+<DXM,pOWY+<DOC*#on:)^Q^S,U=W\,pai^,U+EU,:"KU,q:A
r1,hEY3B&fS3'')[3]oG],UFZV,pjl[*uu:A*#on:,pX`^,paf_,paf[,pXWW,:G*&3]SuM0JP@6.P
3A10J>+4*#gIa+:o;1,p=9O+<):A*?6"F,pala,pai`,paia,:"j"4$Pke1Ft",-7U5h0/>=?0eamg
#RM_($k!gq,T\!I*$$"=*??IR,pjoa-71#b-6ji`/3Q3]4#8?4+sS<U-n-i(.Od&*.468G!X9;J#8/
.*,9n?S*Zc@D*@<-\-7'rc-7'l_-o!YA4ZYGU/hA:o+<)IS0.nUn*[N9b*>Aqc!<W]7'-APG*ZZCG*
??.@-71)e,pauh,p=Hg2``oT1H7ER1FO_$*$Hg`,p=ES*??7B%gN1:!!NQ6(EanI,pscV*Zc=K,pt)
f-7UJk+<DgT.P*,+3B8fB+X\]\*@3$T+XS6@$47L^$NgD0!<`ZB&e5[%.juVd+Wr*X-RpJl/M&1h*"
`l-.kNJ5/g;5S+<qg?+!;UJ,8UUf!s8cA%Kc\2!<a/P#R:\K(`45:-mpAj-mpGl,p*m:%MBa3.kr@j
((q/p)&*l-)]g+8$j-P2!!!3:'EeC9!"0DD!s8Z2%MTm--mg>i.k2YY&Io0S%3d5Q,8q.0'G(ik'c.
c++;P4d!<<*"!!!*.%fu_2":bV:!sJf1#7VV"-7L>t/g_>A#6kAB,U+HS((_)l%gid['c.i4%g)k6z
!!!!'"TSN&$4[(;!WiB)"Uc_+.4Zen*tnh\"Tf/V,9.[1$4dLL"9oDQ(`OG*!s&E&z!!!$%!<<*%&H
r.8!<<-&"XkcI,omsA&dJIA!=^/$*Y8DY&-i:=":l=c*$H7.!Wi?%z!!!$#!!!!)"onW(!!!$%.4Q\
e)&a8+%0H_6$Qp`5"T\`3"U"r4&Ki,7,Tma+"T\T'z!!*'"!!!3/z!!!$L.jZ,L'GM8o#Qk)<-Qs$'
!!*-'"pkYN+Wr'\,p=3A$O$M1zz!!<T0z!!"K!,SL\!()@Mi!WX#b(^1!A!!!$%#7_Y&.kNA*/1)Mb
*=2`H!!*'"z!<rN(z!&5oB%gWOX'GCiT!?ia"!WW3#!!!!#'.>Od/Lr=r,:Fif*!u]H!<E0#z"T\T'
z-QEa+#71tS'Fb'D*ZtXez!!*6?,qUYm.N8s8*$$.B&I/=:z!!!!%!<<*"!!!!>'b(?P#nIR]&cr%E
'E\@9!!!$$"UZ>".30<J&e,Hm,9n?N&-Dn4z!!!'%z!!*fF$jHtF&.K0c"98W7"pY86":#8A&0E2F*
%N$C&Io<_$PXd+#QXo*z!!*-$z"V(eC"UGMH$4n!W!!*6/%gi^R%hfNg*?HU\)@?`T!s8T*!=0JQ"9
S`,z!<N6$!!!!,$O-_:#7:kH'-%2V!!E`F',hW")A<f++t4f@!s/K'z!!X2E!sJc-z!WW3#!!3f?"U
"r3#R^tP*!uZG!tH%^)\s52()@u?+q=VS!<<*"z!>#\C"9ei,!!!!#!<<*"%35WT"p4o0#m_(^&cht
6$5OU!)BL":)BL%?#QXo*zz"q1\="Tn`)!!!$"!!!0B,6e>U!W`B."qMXm"98H,',ho4-6=-I,9@L$
zz!!!!%$3gY:!s&B%!!**#!uN1*"pG/2!!3?0&0)_s!!!*0)(-g\+W;:G,o6^czz!!!')"U,#4"9AK
&!!**/+=/6;"9SZ)!XAuC)]]Cg!!*EI.k)hj)]C"M(^:$Azz!!*-'"U"u5!<<*"!!OJi,pNWr!<E0%
#Rh=c+VOkV!=^>),pOWS*$QOC#m12.zz!!*-*!s8`/!<<*"#pU`B+UA,M!!!'-%hfm*)Zp'?$n<hW.
jZ,S+<D:,!s&B%zz!WrW-!<`K*!<<*',pOKU$3L8/!<``?',hi2"onW1/M\_'*>0//+<1ss!<<*"z!
!!!#!sAT("U+u/!!*99*[)a<"T\T)"pYSQ*>oe(!!!?X/L;ki(E=>5)A*2Uzz!!*-(!rr?+"Tnc*!X
oPL&g8"t!s&K/"pu.f'c7M`!"1A'+X86V-6!sJ(CgQJzz!X&Z.!!3E1!W`9$!<`fH)C6+*!s8Z/#8J
-k&eb?I#9jom+=8BZ-7BoK$j?Y3z!!*9,"pFu,!sSi.!!**&%i5lq/L))A#R(;8'cdu"'*S@='FY'Q
-R1#f,97L.#Qk&,z!!EH.!<<*%"Te])!<E9+#n.M"-mKlN$3^YG(_R8j"p"f9#lt)I.Ouei+W_4"!s
&B%z!!*'"!!*0*!<<*#!<WK3%id,M-n?\a&IoBg&./pO!<Wc=!W`HA-S-Pd*!l]Jzzz!<WH*!<<-$!
sT,H*@rTd/1r=k&e>Q`$k3@A"UkkI!rrB1,9e*6!W`9$zz!!!!#"9JT)!!*0*#ne1#/Lr;#/125A#n
7@T$3UD6#n@UR!<E3'"qUk;!<<*"zz!!!'(!W`9$!X&Z8)^?Xe2Dm!7,ngOh$P!FF!s8W/#nICF!<N
6$!=f87!<E0#zz!!<B+!<<*#!sB)W-7:N'0et4*'ab0M"U"l0#6P)5#7LnC!WW3#"<.mY#6=f)!!*'
"!!!!""9SZ*!!**%":QD!-o!G0.O>l:"Tni.!s/Q3"p>5=$OdCM!<<*"'GD,b"9AK'!W`9$!!!$%!s
&B%!<N<*#TG$91bpX4,8LRj"U"o0"9Sl7#71eG%h03U!!!!*)A*;[!W`<*!W`<%!!36(!<E0#!<NB-
&0N2U1G(!u'ak<Q"pG,5!sAi7$4[FS%M9-Q!<<99$jQt?!<EB,!W`9%!WiE'!!!$#!<WE/)BCal.O?
5S%LECH#6k>8"9f#:$k!IQ%1imL!!<c;"U,#0!<iT/!W`<'!Wi?%!!**$!<NEA+>to$,pO3:$47+G#
R1J:"9\r:"pPDG%L`gL!=KGC!WiE(!X/c1!WrK*!WW3#!<E3%!<X&]1bC"",8Lh!%1W^O#7(M:!sJr
6"q2+U%1ERG"V1b;!<N6%"pG&1"9S],!<<*"!<E3%!tuh4/0uSc'G1`_%LWRK#R1G7"U,#4%hTHe"p
bVD"U+r.!<<-*"Tec/!s8W+!!!!"!<E6)'d>@_,pONH&e#-V$OI(E"pG)4!s8`='+bic"9f2A%gE(8
!!!-*"9eo1"9\`*z!W`B=,;1Pq-6O*;%LWUP#6kD;"9\i/!X92K%Mocc!<WfD&IS^D!sT,>"Te`0!r
r<$!!!$%!<X8c0IeCo*uYe'$k!CI"pYA;"Tnc+"V;4R(_d>Z!!3E@(_I/]!s8W,!sAf1z!!36&"<8R
7,Tn9R*>T1q$O?q?"pY>9!s&E*$k*IX'FP$E!<NB-"p4i*!!39+"pG&.!!!!"!s/H-+!<0c-6j]X)%
[5b#6k>8"pG)1!<E6+#RM4\%Kuk6"U"l.!<<*"!sSo4"T\T'!!**'!WWKH)Z~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
1475 5732 M
88 0 V
3770 0 R
-88 0 V
stroke
1391 5732 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1475 5017 M
88 0 V
3770 0 R
-88 0 V
stroke
1391 5017 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1475 4303 M
88 0 V
3770 0 R
-88 0 V
stroke
1391 4303 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
1475 3588 M
88 0 V
3770 0 R
-88 0 V
stroke
1391 3588 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MRshow
0.500 UL
LTb
1475 2873 M
88 0 V
3770 0 R
-88 0 V
stroke
1391 2873 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MRshow
0.500 UL
LTb
2118 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
2118 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
2832 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
2832 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
3547 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
3547 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
4261 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
4261 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
4976 2516 M
0 88 V
0 3771 R
0 -88 V
stroke
4976 2376 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 6375 N
0 -3859 V
3858 0 V
0 3859 V
-3858 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
